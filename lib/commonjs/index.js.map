{"version":3,"names":["LINKING_ERROR","Platform","select","ios","default","ApptentiveModule","NativeModules","Proxy","get","Error","_onUnreadMessageCountChanged","_eventsRegistered","ApptentiveConfiguration","constructor","key","signature","apptentiveKey","apptentiveSignature","logLevel","distributionName","distributionVersion","require","version","shouldEncryptStorage","shouldSanitizeLogMessages","setTroubleshootingModeEnabled","Apptentive","register","configuration","emitter","NativeEventEmitter","android","DeviceEventEmitter","addListener","unreadMessageCountChangedEvent","e","undefined","count","engage","event","presentMessageCenter","showMessageCenter","setPersonName","name","getPersonName","setPersonEmail","email","getPersonEmail","addCustomPersonData","value","OS","addCustomPersonDataBoolean","addCustomPersonDataNumber","addCustomPersonDataString","Promise","_","reject","addCustomPersonDataBool","removeCustomPersonData","addCustomDeviceData","addCustomDeviceDataBoolean","addCustomDeviceDataNumber","addCustomDeviceDataString","addCustomDeviceDataBool","removeCustomDeviceData","canShowInteraction","canShowMessageCenter","getUnreadMessageCount","onUnreadMessageCountChanged"],"sources":["index.tsx"],"sourcesContent":["import { NativeModules, Platform, DeviceEventEmitter, NativeEventEmitter } from 'react-native';\n\nconst LINKING_ERROR =\n  `The package 'apptentive-react-native' doesn't seem to be linked. Make sure: \\n\\n` +\n  Platform.select({ ios: \"- You have run 'pod install'\\n\", default: '' }) +\n  '- You rebuilt the app after installing the package\\n' +\n  '- You are not using Expo managed workflow\\n';\n\n// Get the Apptentive Native Module\nconst ApptentiveModule = NativeModules.ApptentiveModule\n  ? NativeModules.ApptentiveModule\n  : new Proxy({},{ get() {\n          throw new Error(LINKING_ERROR);\n        },});\n\nlet _onUnreadMessageCountChanged: (count: number) => {};\nlet _eventsRegistered = false;\n\n///// Class Implementation\n\nexport class ApptentiveConfiguration {\n\n  apptentiveKey: string;\n  apptentiveSignature: string;\n  logLevel: string;\n  distributionName: string;\n  distributionVersion: string;\n  shouldEncryptStorage: boolean;\n  shouldSanitizeLogMessages: boolean;\n  setTroubleshootingModeEnabled: boolean;\n\n  constructor(key: string, signature: string) {\n    this.apptentiveKey = key;\n    this.apptentiveSignature = signature;\n    this.logLevel = \"info\";\n    this.distributionName = \"React Native\";\n    this.distributionVersion = require(\"../package\").version;\n    this.shouldEncryptStorage = false;\n    this.shouldSanitizeLogMessages = true;\n    this.setTroubleshootingModeEnabled = true;\n  }\n}\n\nexport class Apptentive {\n\n  // Register the Apptentive SDK\n  static register(configuration: ApptentiveConfiguration): Promise<boolean> {\n    if (!_eventsRegistered) {\n      _eventsRegistered = true;\n\n      const emitter = Platform.select({\n        ios: () => new NativeEventEmitter(ApptentiveModule),\n        android: () => DeviceEventEmitter,\n        default: () => DeviceEventEmitter\n      })();\n\n      emitter.addListener(ApptentiveModule.unreadMessageCountChangedEvent, (e) => {\n        if (_onUnreadMessageCountChanged !== undefined) {\n          _onUnreadMessageCountChanged(e.count);\n        }\n      });\n    }\n\n    return ApptentiveModule.register(configuration);\n  }\n\n  // Engage an event by an event name string\n  static engage(event: string): Promise<boolean> {\n    return ApptentiveModule.engage(event);\n  }\n\n  // Present the Message Center\n  static presentMessageCenter(): Promise<boolean> {\n    return ApptentiveModule.showMessageCenter();\n  }\n\n  // Set person name\n  static setPersonName(name: string): Promise<boolean> {\n    return ApptentiveModule.setPersonName(name);\n  }\n\n  // Get person name\n  static getPersonName(): Promise<string> {\n    return ApptentiveModule.getPersonName();\n  }\n\n  // Set person email\n  static setPersonEmail(email: string): Promise<boolean> {\n    return ApptentiveModule.setPersonEmail(email);\n  }\n\n  // Get person name\n  static getPersonEmail(): Promise<string> {\n    return ApptentiveModule.getPersonEmail();\n  }\n\n  // Add person custom data based on key string and value of type bool, number, or string\n  static addCustomPersonData(key: string, value: any): Promise<boolean> {\n    if (Platform.OS === \"ios\") {\n      return ApptentiveModule.addCustomPersonData(key, value);\n    }\n    else if (Platform.OS === \"android\") {\n      if (typeof value === 'boolean') {\n        return ApptentiveModule.addCustomPersonDataBoolean(key, value);\n      }\n      if (typeof value === 'number') {\n        return ApptentiveModule.addCustomPersonDataNumber(key, value);\n      }\n      if (typeof value === 'string') {\n        return ApptentiveModule.addCustomPersonDataString(key, value);\n      }\n    } else {\n      // Return a default rejected Promise if platform is not supported\n      return new Promise<boolean>((_, reject) => {reject(\"Apptentive Error: Unsupported platform: \" + (Platform.OS));});\n    }\n    // Return a default rejected Promise if type is not supported\n    return new Promise<boolean>((_, reject) => {reject(\"Apptentive Error: Unsupported type of custom data: \" + (typeof value));});\n  }\n\n  /**\n   * @deprecated The method should not be used. Use addCustomPersonData() instead\n   */\n  static addCustomPersonDataBool(key: string, value: boolean) {\n    return Apptentive.addCustomPersonData(key, value);\n  }\n\n  /**\n   * @deprecated The method should not be used. Use addCustomPersonData() instead\n   */\n  static addCustomPersonDataNumber(key: string, value: number) {\n    return Apptentive.addCustomPersonData(key, value);\n  }\n\n  /**\n   * @deprecated The method should not be used. Use addCustomPersonData() instead\n   */\n  static addCustomPersonDataString(key: string, value: string) {\n    return Apptentive.addCustomPersonData(key, value);\n  }\n\n  // Remove person custom data based on key string\n  static removeCustomPersonData(key: string): Promise<boolean> {\n    return ApptentiveModule.removeCustomPersonData(key);\n  }\n\n  // Add device custom data based on key string and value of type bool, number, or string\n  static addCustomDeviceData(key: string, value: any): Promise<boolean> {\n    if (Platform.OS === \"ios\") {\n      return ApptentiveModule.addCustomDeviceData(key, value);\n    }\n    else if (Platform.OS === \"android\") {\n      if (typeof value === 'boolean') {\n        return ApptentiveModule.addCustomDeviceDataBoolean(key, value);\n      }\n      if (typeof value === 'number') {\n        return ApptentiveModule.addCustomDeviceDataNumber(key, value);\n      }\n      if (typeof value === 'string') {\n        return ApptentiveModule.addCustomDeviceDataString(key, value);\n      }\n    } else {\n      // Return a default rejected Promise if platform is not supported\n      return new Promise<boolean>((_, reject) => {reject(\"Apptentive Error: Unsupported platform: \" + (Platform.OS));});\n    }\n    // Return a default rejected Promise if type is not supported\n    return new Promise<boolean>((_, reject) => {reject(\"Apptentive Error: Unsupported type of custom data: \" + (typeof value));});\n  }\n\n  /**\n   * @deprecated The method should not be used. Use addCustomDeviceData() instead\n   */\n  static addCustomDeviceDataBool(key: string, value: boolean) {\n    return Apptentive.addCustomDeviceData(key, value);\n  }\n\n  /**\n   * @deprecated The method should not be used. Use addCustomDeviceData() instead\n   */\n  static addCustomDeviceDataNumber(key: string, value: number) {\n    return Apptentive.addCustomDeviceData(key, value);\n  }\n\n  /**\n   * @deprecated The method should not be used. Use addCustomDeviceData() instead\n   */\n  static addCustomDeviceDataString(key: string, value: string) {\n    return Apptentive.addCustomDeviceData(key, value);\n  }\n\n  // Remove device custom data based on key string\n  static removeCustomDeviceData(key: string): Promise<boolean> {\n    return ApptentiveModule.removeCustomDeviceData(key);\n  }\n\n  // Check if an event name will launch an interaction\n  static canShowInteraction(event: string): Promise<boolean> {\n    return ApptentiveModule.canShowInteraction(event);\n  }\n\n  // Check if Message Center can be shown\n  static canShowMessageCenter(): Promise<boolean> {\n    return ApptentiveModule.canShowMessageCenter();\n  }\n\n  // Get unread message count in Message Center\n  static getUnreadMessageCount(): Promise<number> {\n    return ApptentiveModule.getUnreadMessageCount();\n  }\n\n  /**\n   * @return Current callback for the unread message count change in the Message Center.\n   */\n  static get onUnreadMessageCountChanged() {\n    return _onUnreadMessageCountChanged;\n  }\n\n  /**\n   * Sets current callback for the unread message count change in the Message Center.\n   * @param value Callback function with a single integer parameter.\n   */\n  static set onUnreadMessageCountChanged(value) {\n    _onUnreadMessageCountChanged = value;\n  }\n\n}\n"],"mappings":"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"}